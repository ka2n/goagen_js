// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "goagen_js": Application User Types
//
// Command:
// $ goagen
// --design=github.com/shirou/goagen_js/example/design
// --out=$(GOPATH)src/github.com/shirou/goagen_js/example
// --version=v1.2.0-dirty

package app

import (
	"github.com/goadesign/goa"
	"unicode/utf8"
)

// userCreatePayload user type.
type userCreatePayload struct {
	Age   *int    `form:"age,omitempty" json:"age,omitempty" xml:"age,omitempty"`
	Email *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	Name  *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Sex   *string `form:"sex,omitempty" json:"sex,omitempty" xml:"sex,omitempty"`
}

// Validate validates the userCreatePayload type instance.
func (ut *userCreatePayload) Validate() (err error) {
	if ut.Name == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	if ut.Age != nil {
		if *ut.Age < 20 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *ut.Age, 20, true))
		}
	}
	if ut.Age != nil {
		if *ut.Age > 70 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *ut.Age, 70, false))
		}
	}
	if ut.Email != nil {
		if ok := goa.ValidatePattern(`^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}$`, *ut.Email); !ok {
			err = goa.MergeErrors(err, goa.InvalidPatternError(`response.email`, *ut.Email, `^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}$`))
		}
	}
	if ut.Name != nil {
		if utf8.RuneCountInString(*ut.Name) < 4 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`response.name`, *ut.Name, utf8.RuneCountInString(*ut.Name), 4, true))
		}
	}
	if ut.Name != nil {
		if utf8.RuneCountInString(*ut.Name) > 16 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`response.name`, *ut.Name, utf8.RuneCountInString(*ut.Name), 16, false))
		}
	}
	if ut.Sex != nil {
		if !(*ut.Sex == "male" || *ut.Sex == "female" || *ut.Sex == "other") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError(`response.sex`, *ut.Sex, []interface{}{"male", "female", "other"}))
		}
	}
	return
}

// Publicize creates UserCreatePayload from userCreatePayload
func (ut *userCreatePayload) Publicize() *UserCreatePayload {
	var pub UserCreatePayload
	if ut.Age != nil {
		pub.Age = ut.Age
	}
	if ut.Email != nil {
		pub.Email = ut.Email
	}
	if ut.Name != nil {
		pub.Name = *ut.Name
	}
	if ut.Sex != nil {
		pub.Sex = ut.Sex
	}
	return &pub
}

// UserCreatePayload user type.
type UserCreatePayload struct {
	Age   *int    `form:"age,omitempty" json:"age,omitempty" xml:"age,omitempty"`
	Email *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	Name  string  `form:"name" json:"name" xml:"name"`
	Sex   *string `form:"sex,omitempty" json:"sex,omitempty" xml:"sex,omitempty"`
}

// Validate validates the UserCreatePayload type instance.
func (ut *UserCreatePayload) Validate() (err error) {
	if ut.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	if ut.Age != nil {
		if *ut.Age < 20 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *ut.Age, 20, true))
		}
	}
	if ut.Age != nil {
		if *ut.Age > 70 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *ut.Age, 70, false))
		}
	}
	if ut.Email != nil {
		if ok := goa.ValidatePattern(`^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}$`, *ut.Email); !ok {
			err = goa.MergeErrors(err, goa.InvalidPatternError(`response.email`, *ut.Email, `^[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}$`))
		}
	}
	if utf8.RuneCountInString(ut.Name) < 4 {
		err = goa.MergeErrors(err, goa.InvalidLengthError(`response.name`, ut.Name, utf8.RuneCountInString(ut.Name), 4, true))
	}
	if utf8.RuneCountInString(ut.Name) > 16 {
		err = goa.MergeErrors(err, goa.InvalidLengthError(`response.name`, ut.Name, utf8.RuneCountInString(ut.Name), 16, false))
	}
	if ut.Sex != nil {
		if !(*ut.Sex == "male" || *ut.Sex == "female" || *ut.Sex == "other") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError(`response.sex`, *ut.Sex, []interface{}{"male", "female", "other"}))
		}
	}
	return
}
