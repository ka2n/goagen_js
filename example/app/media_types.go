// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "goagen_js": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/shirou/goagen_js/example/design
// --out=$(GOPATH)src/github.com/shirou/goagen_js/example
// --version=v1.2.0-dirty

package app

import (
	"github.com/goadesign/goa"
	"unicode/utf8"
)

// User media type (default view)
//
// Identifier: application/vnd.user+json; view=default
type User struct {
	Age  *int    `form:"age,omitempty" json:"age,omitempty" xml:"age,omitempty"`
	Name string  `form:"name" json:"name" xml:"name"`
	Sex  *string `form:"sex,omitempty" json:"sex,omitempty" xml:"sex,omitempty"`
}

// Validate validates the User media type instance.
func (mt *User) Validate() (err error) {
	if mt.Name == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "name"))
	}
	if mt.Age != nil {
		if *mt.Age < 20 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *mt.Age, 20, true))
		}
	}
	if mt.Age != nil {
		if *mt.Age > 70 {
			err = goa.MergeErrors(err, goa.InvalidRangeError(`response.age`, *mt.Age, 70, false))
		}
	}
	if utf8.RuneCountInString(mt.Name) < 4 {
		err = goa.MergeErrors(err, goa.InvalidLengthError(`response.name`, mt.Name, utf8.RuneCountInString(mt.Name), 4, true))
	}
	if utf8.RuneCountInString(mt.Name) > 16 {
		err = goa.MergeErrors(err, goa.InvalidLengthError(`response.name`, mt.Name, utf8.RuneCountInString(mt.Name), 16, false))
	}
	if mt.Sex != nil {
		if !(*mt.Sex == "male" || *mt.Sex == "female" || *mt.Sex == "other") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError(`response.sex`, *mt.Sex, []interface{}{"male", "female", "other"}))
		}
	}
	return
}

// UserCollection is the media type for an array of User (default view)
//
// Identifier: application/vnd.user+json; type=collection; view=default
type UserCollection []*User

// Validate validates the UserCollection media type instance.
func (mt UserCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}
